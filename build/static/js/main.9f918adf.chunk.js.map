{"version":3,"sources":["assets/logo.svg","store/actions.js","layout/util.js","store/reducers.js","store/index.js","layout/leftPanel/ContactList.js","layout/leftPanel/EducationInfo.js","layout/leftPanel/WorkExperience.js","layout/leftPanel/InfoForm.js","layout/leftPanel/LeftPanel.js","layout/rightPanel/Contacts.js","layout/rightPanel/RightPanel.js","layout/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","EDIT_NAME","EDIT_DATE","EDIT_REGION","EDIT_CONTACT","EDIT_EDUCATION","EDIT_EDUCATION_INFO","CREATE_WORK","EDIT_WORK","editContact","contact","type","contactObject","editEducationInfo","eduInfo","eduObject","editWork","work","workObj","user","Object","classCallCheck","this","name","date","region","education","educationExperience","index","link","school","startDate","Date","endDate","major","courses","workExperience","company","jobTitle","description","initialState","style","themeColor","updateApp","combineReducers","updateUser","state","arguments","length","undefined","action","text","console","log","assign","updateStyle","store","createStore","React","createContext","ContactUnit","props","allOptions","menu","curr","value","update","callBk","remove","options","map","option","react_default","a","createElement","es5","Option","key","selected","select","onChange","e","className","Item","label","icon","onClick","connect","contacts","_ref","dispatch","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","_useState3","_useState4","contactLst","setContactLst","_useState5","_useState6","count","setCount","c","nlst","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","filter","i","switchState","input","newLst","push","EducationUnit","eduUnit","delete","placeholder","Col","span","labelWidth","bind","eduExp","edu1","eduLst","setEduLst","toShow","obj","newEdu","WorkUnit","works","workLst","setWorkLst","newWork","Name","birthDate","Region","Edu","setName","setRegion","setDate","_useState7","_useState8","edu","setEdu","leftPanel_ContactList","leftPanel_EducationInfo","leftPanel_WorkExperience","nativeType","LeftPanel","possibleConstructorReturn","getPrototypeOf","call","person","profile","upd","leftPanel_InfoForm","Component","class","CollapseBtn","expandRight","theme","defaultActive","mode","rightPanel_Contacts","NavBar","_this","toggle","assertThisInitialized","setState","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","App","u","binded","rightIsExpanded","content","event","newUser","JSON","parse","stringify","target","styled","RightPanel","_templateObject","layout_NavBar","rightPanel_RightPanel","direction","leftPanel_LeftPanel","Boolean","window","location","hostname","match","root","document","getElementById","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f918adf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const EDIT_NAME = \"EDIT NAME\";\nexport const EDIT_DATE = \"EDIT DATE\";\nexport const EDIT_REGION = \"EDIT REGION\";\nexport const EDIT_CONTACT = \"EDIT CONTECT\";\nexport const EDIT_EDUCATION = \"EDIT EDUCATION\";\nexport const EDIT_EDUCATION_INFO = \"EDIT EDUCATION INFO\";\nexport const CREATE_WORK = \"CREATE WORK\";\nexport const EDIT_WORK = \"EDIT WORK\";\n\nexport function editName(text) {\n    return {type: EDIT_NAME, text: text};\n}\n\nexport function editDate(text) {\n    return {type: EDIT_DATE, text: text};\n}\n\nexport function editRegion(text) {\n    return {type: EDIT_REGION, text: text};\n}\n\nexport function editEducation(text) {\n    return {type: EDIT_EDUCATION, text: text};\n}\n\nexport function editContact(contact) {\n    return {type: EDIT_CONTACT, contactObject:contact};\n}\n\nexport function editEducationInfo(eduInfo) {\n    return {type:EDIT_EDUCATION_INFO, eduObject:eduInfo};\n}\n\nexport function createWork(){\n    return {type:CREATE_WORK};\n}\n\nexport function editWork(work){\n    return {type: EDIT_WORK, workObj: work};\n}","export class user {\n  constructor(){\n    this.name= '';\n    this.date = null;\n    this.region = null;\n    this.contact= [new contact(1,null,null)];\n    this.education= ''\n    this.educationExperience = [new education(1, null, null)];\n  }\n}\n\n\nexport class contact {\n  constructor(index, name ,link){\n    this.index= index;\n    this.name = name;\n    this.link = link;\n  }\n}\n\nexport class education {\n  constructor(index){\n    this.index = index;\n    this.school = \"\";\n    this.startDate = new Date(0);\n    this.endDate = new Date(0);\n    this.major = \"\";\n    this.courses = \"\";\n  }\n}\n\nexport class workExperience {\n  constructor(index) {\n    this.index = index;\n    this.company = \"\";\n    this.jobTitle = \"\";\n    this.startDate = new Date(0);\n    this.endDate = new Date(0);\n    this.description = \"\";\n  }\n}\n","import { EDIT_NAME, EDIT_DATE, EDIT_REGION, EDIT_EDUCATION, EDIT_CONTACT, EDIT_EDUCATION_INFO , CREATE_WORK, EDIT_WORK} from \"./actions\";\nimport { combineReducers } from \"redux\";\nimport {contact, education, workExperience} from \"../layout/util\"\n\n\nconst initialState = {\n    user: {\n        name: '',\n        date: new Date(0),\n        region:'',\n        education:'',\n        contact:[new contact(0)],\n        educationExperience:[new education(0)],\n        workExperience: [new workExperience()]\n    },\n    style: {\n        themeColor: '',\n    }\n}\n\n// console.log(store.getState());\n\nfunction updateUser(state=initialState, action) {\n    var user = state.user;\n    switch(action.type) {\n        case EDIT_NAME:\n            user.name = action.text;\n            console.log(state);\n            return Object.assign({}, state, user);\n        case EDIT_DATE:\n            user.date = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_REGION:\n            user.region = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION:\n            user.education = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_CONTACT:\n            user.contact = action.contactObject;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION_INFO:\n            user.educationExperience = action.eduObject;\n            return Object.assign({}, state, user);\n        case CREATE_WORK:\n            user.workExperience = [new workExperience(0)];\n            return Object.assign({}, state, user);\n        case EDIT_WORK:\n            user.workExperience = action.workObj;\n            return Object.assign({}, state, user);\n        default:\n            return state;\n    }\n}\n\nfunction updateStyle(state=initialState, action) {\n    return state;\n}\n\nexport const updateApp = combineReducers({\n    updateUser,\n    updateStyle\n})","import { createStore } from 'redux';\nimport {updateApp} from './reducers';\nimport React from 'react';\n\nexport const store = createStore(updateApp)\nexport const context = React.createContext();\n","import React, { useState} from 'react';\nimport {contact} from '../util';\nimport { Button, Input, Select, Form} from 'element-react';\nimport 'element-theme-default';\nimport {connect} from 'react-redux'\nimport { editContact } from '../../store/actions';\n\n  const ContactList = ({contacts, dispatch}) => {\n      let menu = ['other','phone','facebook', 'gmail','linkedin','instagram','qq','wechat'];\n      const [isOpen, setIsOpen] = useState(true);\n      const [contactLst, setContactLst] = useState(contacts)\n      const [count, setCount] = useState(0);\n\n      function update(index, type, value) {\n        var c;\n        var nlst = contactLst.slice();\n        for (c of nlst) {\n          if (c.index === index) {\n            if (type === \"type\") {\n              c.name = value;\n            } else {\n              c.link = value;\n            }\n          }\n        }\n        setContactLst(nlst);\n        dispatch(editContact(nlst));\n      }\n\n      function add() {\n        var newLst = contactLst.slice();\n        var c = new contact(count + 1);\n        newLst.push(c);\n        setContactLst(newLst);\n        setCount(count+1);\n        dispatch(editContact(newLst));\n      };\n\n      function remove(index) {\n        \n        var nlst = contactLst.slice();\n        nlst = nlst.filter((i)=> {return i.index != index})\n        setContactLst(nlst);\n        dispatch(editContact(nlst))\n      };\n\n      function switchState() {\n        setIsOpen(!isOpen);\n      };\n\n      const input = contactLst.map((contact)=>\n        <ContactUnit menu={menu} key={contact.index+'unit'} index={contact.index} value={contact} callBk={update} remove={remove}></ContactUnit>\n      );\n  \n      if(!isOpen) {\n        return(\n          <div className=\"closedContact\">\n            <Button type=\"primary small\" onClick={switchState}>Expand</Button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <div className=\"openedContactTitle\">\n              {input}\n              <Button type=\"primary small\" onClick={add}>Add</Button>\n              <Button type=\"primary small\" onClick={switchState}>Collapse</Button>\n            </div>\n          </div>\n        )\n      }\n\n  }\n\n  function ContactUnit (props) {\n      const allOptions = props.menu;\n      const curr = props.value.index;\n      const update = props.callBk;\n      const index = props.index;\n      const remove = props.remove;\n      const options = allOptions.map(function(option,curr){\n        if (option === curr) {\n          return <Select.Option value={option} key={curr} selected >{option}</Select.Option>\n        } else {\n          return <Select.Option value={option} key={curr}>{option}</Select.Option>\n        }\n      }\n  \n    )\n      const select = <Select name='contactMethods' key={curr+'select'} onChange={e => update(curr, 'type', e)}>{options}</Select>\n      return (\n        <div className=\"contactUnit\">\n          <Form.Item className=\"contactUnit\" key={curr+'div'}>\n            {select} \n          </Form.Item>\n          <Form.Item label=\"link: \">\n            <Input type=\"text\" className=\"contactInput\" key={curr+'input'} value={props.value.link} onChange={e => update(curr, 'value', e)}></Input>\n          </Form.Item>\n          <Button type=\"text\" icon=\"delete\" onClick={()=>remove(index)}></Button>\n        </div>\n      )\n    \n  }\n\n  function mapStateToProps(state) {\n    var contacts = state.updateUser.user.contact;\n    return {contacts};\n  }\n\n  export default connect(mapStateToProps)(ContactList);\n","import React, { useState} from 'react';\nimport {education} from '../util';\nimport { Button, Input, Select, Layout, Form, DatePicker} from 'element-react';\nimport 'element-theme-default';\nimport { editEducationInfo } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nconst EducationInfo = ({eduExp, dispatch}) => {\n      var edu1 = eduExp;\n      // console.log(eduExp);\n      const [isOpen, setIsOpen] = useState(true);\n      const [count, setCount] = useState(1);\n      const [eduLst, setEduLst] = useState(edu1);\n      const toShow = eduLst.map((eduUnit)=> {return <EducationUnit key={eduUnit.index} index={eduUnit.index} value={eduUnit} callBk={update} delete={remove}></EducationUnit>});\n\n      function switchState() {\n        setIsOpen(!isOpen);\n      }\n    \n      function add() {\n\n        const newEdu= new education(count);\n        setCount(count+1);\n        var nlst = eduLst.slice();\n        nlst.push(newEdu);\n        setEduLst(nlst)\n        dispatch(editEducationInfo(nlst));\n      };\n\n      function remove(index) {\n        var nlst = eduLst.slice();\n        nlst = nlst.filter((i)=> {return i.index != index})\n        setEduLst(nlst);\n        dispatch(editEducationInfo(nlst));\n      };\n\n      function update(index, obj) {\n        var e;\n        var nlst = eduLst.slice();\n        // console.log(obj);\n        for (e of nlst) {\n          if (e.index === index) {\n            e = obj;\n          }\n        }\n        setEduLst(nlst);\n        dispatch(editEducationInfo(nlst));\n      }\n\n      if(!isOpen) {\n          return(\n            <Form.Item label=\"学术经历 \">\n              <Button type=\"primary small\" onClick={switchState}>Expand</Button>\n            </Form.Item>\n          )\n      } else {\n          return(\n              <Form.Item label=\"学术经历 \">\n                  {toShow}\n                  <Button type=\"primary small\" onClick={add}>Add</Button>\n                  <Button type=\"primary small\" onClick={switchState}>Collapse</Button>\n              </Form.Item>\n          )\n      }\n}\n\nfunction EducationUnit (props) {\n  let eduUnit = props.value;\n  let index = props.index;\n  let update = props.callBk;\n  let remove = props.delete;\n\n  function onChange(value, key) {\n    eduUnit[key] = value;\n    update(eduUnit.index, eduUnit);\n    // forceUpdate();\n  };\n\n  return(\n    <div>\n      <Form.Item label=\"所在学校： \">\n        <Input placeholder=\"请输入就读学校名称\" value={eduUnit.school} onChange={(e)=>onChange(e, 'school')}></Input>\n      </Form.Item>\n      <Form.Item label=\"时间： \">\n        <Layout.Col span=\"5\">\n          <Form.Item labelWidth=\"0px\">\n            <DatePicker\n              value={eduUnit.startDate}\n              placeholder=\"选择开始日期\"\n              onChange={(e)=> onChange.bind(e, 'startDate')}\n            />\n          </Form.Item>\n        </Layout.Col>\n        <Layout.Col className=\"line\" span=\"1\">-</Layout.Col>\n        <Layout.Col span=\"5\">\n          <Form.Item labelWidth=\"0px\">\n            <DatePicker\n              value={eduUnit.endDate}\n              placeholder=\"选择结束日期\"\n              onChange={(e)=>onChange.bind(e, 'endDate')}\n            />\n          </Form.Item>\n          </Layout.Col>\n        </Form.Item>\n      <Form.Item label=\"专业： \">\n        <Input placeholder=\"请输入主要专业\" value={eduUnit.major} onChange={(e)=> onChange(e, 'major')}></Input>\n      </Form.Item>\n      <Form.Item label=\"专业课程： \">\n        <Input placeholder=\"请输入主要学习课程\"  value={eduUnit.courses} onChange={(e)=> onChange(e, \"courses\")}></Input>\n      </Form.Item>\n      <Button type=\"text\" icon=\"delete\" onClick={() => {remove(index)}}></Button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n    var eduExp = state.updateUser.user.educationExperience;\n    // console.log(eduExp);\n    return {eduExp};\n}\n\nexport default connect(mapStateToProps)(EducationInfo);","import React, { useState } from 'react';\nimport { Button, Input, Select, Layout, Form, DatePicker} from 'element-react';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\nimport {editWork} from '../../store/actions';\nimport {workExperience} from '../util';\n\nconst WorkExperience = ({works, dispatch}) => {\n    const [isOpen, setIsOpen] = useState(true);\n    const [count, setCount] = useState(1);\n    const [workLst, setWorkLst] = useState(works);\n    const toShow = workLst.map((work)=>{return <WorkUnit key={work.index} index={work.index} work={work} remove={remove} update={update}></WorkUnit>});\n\n    function switchState() {\n        setIsOpen(!isOpen);\n    }\n\n    function add() {\n        const newWork= new workExperience(count);\n        setCount(count+1);\n        var nlst = workLst.slice();\n        nlst.push(newWork);\n        setWorkLst(nlst)\n        dispatch(editWork(nlst));\n    }\n\n    function update(index, obj) {\n        var e;\n        var nlst = workLst.slice();\n        for (e of nlst) {\n          if (e.index === index) {\n            e = obj;\n          }\n        }\n        setWorkLst(nlst);\n        dispatch(editWork(nlst));\n    }\n\n    function remove(index){\n        var nlst = workLst.slice();\n        nlst = nlst.filter((i)=> {return i.index != index})\n        setWorkLst(nlst);\n        dispatch(editWork(nlst));\n    }\n\n    if (!isOpen) {\n        return (\n            <Form.Item label=\"从业经历 \">\n              <Button type=\"primary small\" onClick={switchState}>Expand</Button>\n            </Form.Item>\n        )\n    }\n    return(\n        <Form.Item label=\"从业经历 \">\n            {toShow}\n            <Button type=\"primary small\" onClick={add}>Add</Button>\n            <Button type=\"primary small\" onClick={switchState}>Collapse</Button>\n        </Form.Item>\n    )\n}\n\nfunction WorkUnit(props){\n    var index = props.index;\n    var work = props.work;\n    const update = props.update;\n    const remove = props.remove;\n\n    function onChange(value, key) {\n        work[key] = value;\n        update(work.index, work);\n    }\n\n    return(\n        <div>\n        <Form.Item label=\"所在单位： \">\n          <Input placeholder=\"请输入所在单位名称\" value={work.company} onChange={(e)=>onChange(e, 'company')}></Input>\n        </Form.Item>\n        <Form.Item label=\"职位： \">\n          <Input placeholder=\"请输入职位名称\" value={work.jobTitle} onChange={(e)=>onChange(e, 'jobTitle')}></Input>\n        </Form.Item>\n        <Form.Item label=\"时间： \">\n          <Layout.Col span=\"5\">\n            <Form.Item labelWidth=\"0px\">\n              <DatePicker\n                value={work.startDate}\n                placeholder=\"选择开始日期\"\n                onChange={(e)=> onChange.bind(e, 'startDate')}\n              />\n            </Form.Item>\n          </Layout.Col>\n          <Layout.Col className=\"line\" span=\"1\">-</Layout.Col>\n          <Layout.Col span=\"5\">\n            <Form.Item labelWidth=\"0px\">\n              <DatePicker\n                value={work.endDate}\n                placeholder=\"选择结束日期\"\n                onChange={(e)=>onChange.bind(e, 'endDate')}\n              />\n            </Form.Item>\n            </Layout.Col>\n          </Form.Item>\n        <Form.Item label=\"工作内容： \">\n          <Input placeholder=\"请输入主要工作职责描述\"  value={work.description} onChange={(e)=> onChange(e, \"desxription\")}></Input>\n        </Form.Item>\n        <Button type=\"text\" icon=\"delete\" onClick={() => {remove(index)}}></Button>\n      </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    var works = state.updateUser.user.workExperience;\n    // console.log(eduExp);\n    return {works};\n}\n\nexport default connect(mapStateToProps)(WorkExperience);","import React, { useState } from 'react';\nimport ContactList from './ContactList';\nimport EducationInfo from './EducationInfo';\nimport WorkExperience from './WorkExperience';\nimport { connect } from 'react-redux'\nimport {editName, editRegion, editDate, editEducation} from '../../store/actions';\nimport { Button, Form, Input, Select, DatePicker } from 'element-react';\nimport 'element-theme-default';\n\n  const InfoForm = ({Name, Region, birthDate, Edu, dispatch}) => {\n    const [name, setName] = useState(Name);\n    const [region, setRegion] = useState(Region);\n    const [date, setDate] = useState(birthDate);\n    const [edu, setEdu] = useState(Edu);\n\n      return (\n        <Form labelWidth=\"70\">\n          <Form.Item label=\"姓名 \">\n            <Input value={name} placeholder=\"请输入您的姓名\" onChange={(e)=> {setName(e); dispatch(editName(e));}}></Input>\n          </Form.Item>\n          <Form.Item label=\"所在地 \">\n            <Select placeholder=\"请选择活动区域\" value={region} onChange={(e)=> {setRegion(e); dispatch(editRegion(e))}}>\n              <Select.Option label=\"上海\" value=\"shanghai\"></Select.Option>\n              <Select.Option label=\"北京\" value=\"beijing\"></Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"出生年月 \">\n              <DatePicker\n                  value={date}\n                  placeholder=\"选择日期\"\n                  onChange={(e)=> {setDate(e); dispatch(editDate(e))}}\n                />\n          </Form.Item>\n          <Form.Item label=\"学历 \">\n            <Select value={edu} placeholder=\"请选择您的最高学历\" onChange={(e)=>{setEdu(e); dispatch(editEducation({edu}))}}>\n              <Select.Option label=\"初中\" value=\"初中\"></Select.Option>\n              <Select.Option label=\"高中\" value=\"高中\"></Select.Option>\n              <Select.Option label=\"本科\" value=\"本科\"></Select.Option>\n              <Select.Option label=\"研究生\" value=\"研究生\"></Select.Option>\n              <Select.Option label=\"硕士\" value=\"硕士\"></Select.Option>\n              <Select.Option label=\"博士及以上\" value=\"博士及以上\"></Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"联系方式 \">\n            <ContactList></ContactList>\n          </Form.Item>\n          <EducationInfo></EducationInfo>\n          <WorkExperience></WorkExperience>\n          <Form.Item>\n            <Button type=\"primary\" nativeType=\"submit\">立即创建</Button>\n            <Button>取消</Button>\n          </Form.Item>\n        </Form>\n      )\n  }\n\n  function mapStateToProps(state) {\n    var user = state.updateUser.user;\n    return {\n      Name: user.name,\n      birthDate: user.date,\n      Region: user.region,\n      Edu: user.education\n      }\n  }\n\n  export default connect(mapStateToProps)(InfoForm);","import React, { Component } from 'react';\nimport InfoForm from './InfoForm';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\n\nclass LeftPanel extends Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      // console.log(this.props.profile);\n      var person = this.props.profile;\n      var update=this.props.upd;\n      return(\n        <div>\n            <InfoForm user={person}></InfoForm>\n        </div>\n      )\n    }\n  }\n\n  function mapStateToProps(state) {\n    const user = state.updateUser.user;\n    return {user};\n  }\n\n  export default connect(mapStateToProps)(LeftPanel);\n  ","import React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport { Menu, Button} from 'element-react';\nimport 'element-theme-default';\n\nconst Contacts = ({contactLst}) => {\n    const toShow = contactLst.map((c) => {return <Button key={c.index}>{c.index}</Button>})\n    return (\n        <div class=\"contactDiv\">\n            {toShow}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    var contactLst = state.updateUser.user.contact;\n    return {contactLst};\n  }\n  \n  export default connect(mapStateToProps)(Contacts);","import React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport { Menu, Button} from 'element-react';\nimport Contacts from './Contacts';\nimport 'element-theme-default';\n\nfunction RightPanel(props) {\n    return(\n      <div className = {props.className}>\n          <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" >\n            <Menu.Item index=\"1\">基础信息</Menu.Item>\n            <Menu.Item index=\"2\">学术经历</Menu.Item>\n            <Menu.Item index=\"3\">就业经历</Menu.Item>\n          </Menu>\n          <Contacts></Contacts>\n          <CollapseBtn expandRight = {props.expandRight}/>\n      </div>\n    )\n}\n\nfunction CollapseBtn(props) {\n    return(\n      <Button  type=\"primary\" onClick = {()=>props.expandRight()} icon=\"view\">\n      </Button>\n    )\n}\n\nfunction mapStateToProps(state) {\n  var user = state.updateUser.user;\n  return {user};\n}\n\nexport default connect(mapStateToProps)(RightPanel);","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\" className=\"topNav\">\n          <NavbarBrand href=\"/\">Resuwee</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto \" navbar>\n              <NavItem>\n                <NavLink href=\"/components/\">Edit Mode</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"\">Resume Generator</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"\">Donate</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Settings\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Help\n                  </DropdownItem>\n                  <DropdownItem>\n                    My Profile\n                  </DropdownItem>\n                  <DropdownItem>\n                    Manage Resumes\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Logout\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport logo from './assets/logo.svg';\nimport './style/App.css';\nimport styled from 'styled-components';\nimport {user} from './layout/util';\nimport LeftPanel from './layout/leftPanel/LeftPanel'\nimport RightPanel from './layout/rightPanel/RightPanel'\nimport NavBar from './layout/NavBar'\nimport { Layout } from 'element-react';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    var u = new user();\n    this.binded = this.expandRight.bind(this);\n    this.update = this.update.bind(this);\n    this.state = {\n      rightIsExpanded: false,\n      content: \"This is the collapsed right panel\",\n      user: u,\n    };\n\n  }\n  expandRight() {\n    // console.log(this.state.rightIsExpanded);\n    this.setState({rightIsExpanded:!this.state.rightIsExpanded});\n  };\n\n  update(event) {\n      var newUser = JSON.parse(JSON.stringify(this.state.user));\n      // console.log(event.target);\n      newUser[event.target.name] = event.target.value;\n      console.log(newUser);\n      this.setState({\n        user: newUser,\n      });\n      // console.log(this.state.user);\n  }\n  render() {\n    // console.log(this.state.user);\n      const newContent = \"This is the expanded right panel\";\n      if(this.state.rightIsExpanded){\n        const styleDiv = styled(RightPanel)`width:100%`;\n        return(\n        <div>\n          <NavBar />\n          <Layout.Col span='24'>\n            <RightPanel className = \"expanded\" content = {newContent} profile={this.state.user} expandRight = {this.binded} direction = \"right\" />  \n          </Layout.Col>\n          \n        </div>);\n      } else {\n        return(\n        <div>\n          <NavBar />\n          <Layout.Col span='12'>\n            <LeftPanel  profile={this.state.user} upd={this.update}/>\n          </Layout.Col>\n          <Layout.Col span=\"12\">\n            <RightPanel  content = {this.state.content} profile={this.state.user} expandRight = {this.binded} direction = \"left\"/>\n          </Layout.Col>\n        </div>);\n      }\n\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  const user = state.user;\n  return {user};\n}\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {store, context} from './store/index'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { connect } from 'react-redux';\n\nvar root = document.getElementById('root');\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider> , root );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}