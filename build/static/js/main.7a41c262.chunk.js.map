{"version":3,"sources":["assets/logo.svg","store/actions.js","layout/util.js","store/reducers.js","store/index.js","serviceWorker.js","layout/leftPanel/ContactList.jsx","layout/leftPanel/EducationInfo.jsx","layout/leftPanel/WorkExperience.jsx","api/api.js","layout/leftPanel/InfoForm.jsx","layout/leftPanel/LeftPanel.jsx","layout/rightPanel/Contacts.jsx","layout/rightPanel/Bio.jsx","layout/rightPanel/Edu.jsx","layout/rightPanel/Work.jsx","layout/rightPanel/RightPanel.jsx","layout/NavBar.jsx","App.jsx","layout/View.jsx","layout/Login.jsx","routes/Direct.jsx","index.js"],"names":["module","exports","__webpack_require__","p","EDIT_NAME","EDIT_DATE","EDIT_REGION","EDIT_CONTACT","EDIT_EDUCATION","EDIT_EDUCATION_INFO","CREATE_WORK","EDIT_WORK","LOG_IN","LOG_OUT","OVER_WRITE_ALL","ADD_PASSWORD","ADD_USERNAME","editName","text","type","editDate","editRegion","editEducation","editContact","contact","contactObject","editEducationInfo","eduInfo","eduObject","editWork","work","workObj","login","index","name","link","Object","classCallCheck","this","education","school","startDate","Date","endDate","major","courses","workExperience","company","jobTitle","description","initialState","password","profile","date","region","educationExperience","style","themeColor","updateApp","combineReducers","updateUser","state","arguments","length","undefined","action","user","console","log","assign","updateStyle","loginStatusChange","obj","rtn","sub","all","JSON","parse","store","createStore","React","createContext","Boolean","window","location","hostname","match","ContactUnit","props","allOptions","menu","curr","value","update","callBk","remove","options","map","option","react_default","a","createElement","es5","Option","key","selected","select","onChange","e","className","Item","label","icon","onClick","connect","contacts","_ref","dispatch","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","_useState3","_useState4","contactLst","setContactLst","_useState5","_useState6","count","setCount","c","nlst","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","filter","i","switchState","input","newLst","push","EducationUnit","eduUnit","delete","placeholder","Col","span","labelWidth","bind","eduExp","edu1","eduLst","setEduLst","toShow","newEdu","WorkUnit","works","workLst","setWorkLst","newWork","api","axios","create","baseURL","responseType","username","Name","birthDate","Region","Edu","setName","setRegion","setDate","_useState7","_useState8","edu","setEdu","_useState9","_useState10","dialogVisible","setDialogVisible","_useState11","_useState12","redirect","setRedirect","_submitEdit","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","API","post","stringify","sent","status","data","affectedRows","Message","message","stop","apply","react_router","to","leftPanel_ContactList","leftPanel_EducationInfo","leftPanel_WorkExperience","title","size","visible","onCancel","lockScroll","Body","Footer","LeftPanel","possibleConstructorReturn","getPrototypeOf","call","person","upd","leftPanel_InfoForm","Component","Row","gutter","offset","userName","userRegion","userEdu","rightPanel_Contacts","show","w","CollapseBtn","expandRight","page","setPage","rightPanel_Bio","rightPanel_Edu","rightPanel_Work","theme","defaultActive","mode","onSelect","_React$createElement","needToLogin","setNeedToLogin","redirectToView","setRedirectToView","needToLogOut","setNeedToLogOut","defineProperty","App","_this","binded","assertThisInitialized","rightIsExpanded","setState","layout_NavBar","rightPanel_RightPanel","content","leftPanel_LeftPanel","href","container","pathname","split","setProfile","useEffect","_fetchData","userData","temp","get","params","showClose","fetchData","setMode","setPassword","setText","back","setBack","warn","setWarn","_validateLogin","plain","react_router_dom","exact","path","component","View","Login","root","document","getElementById","ReactDOM","render","es","routes_Direct","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a41c262.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const EDIT_NAME = \"EDIT NAME\";\nexport const EDIT_DATE = \"EDIT DATE\";\nexport const EDIT_REGION = \"EDIT REGION\";\nexport const EDIT_CONTACT = \"EDIT CONTECT\";\nexport const EDIT_EDUCATION = \"EDIT EDUCATION\";\nexport const EDIT_EDUCATION_INFO = \"EDIT EDUCATION INFO\";\nexport const CREATE_WORK = \"CREATE WORK\";\nexport const EDIT_WORK = \"EDIT WORK\";\nexport const LOG_IN = \"LOG IN\";\nexport const LOG_OUT = \"LOG OUT\";\nexport const OVER_WRITE_ALL = \"OVER WRITE ALL\";\nexport const ADD_PASSWORD = \"ADD PASSWORD\";\nexport const ADD_USERNAME = \"ADD USERNAME\";\n\nexport function editName(text) {\n    return {type: EDIT_NAME, text: text};\n}\n\nexport function editDate(text) {\n    return {type: EDIT_DATE, text: text};\n}\n\nexport function editRegion(text) {\n    return {type: EDIT_REGION, text: text};\n}\n\nexport function editEducation(text) {\n    return {type: EDIT_EDUCATION, text: text};\n}\n\nexport function editContact(contact) {\n    return {type: EDIT_CONTACT, contactObject:contact};\n}\n\nexport function editEducationInfo(eduInfo) {\n    return {type:EDIT_EDUCATION_INFO, eduObject:eduInfo};\n}\n\nexport function createWork(){\n    return {type:CREATE_WORK};\n}\n\nexport function editWork(work){\n    return {type: EDIT_WORK, workObj: work};\n}\n\nexport function overWriteAll(all) {\n    return {type: OVER_WRITE_ALL, all};\n}\n\nexport function login() {\n    return {type: LOG_IN};\n}\n\nexport function logout() {\n    return {type: LOG_OUT};\n}\n\nexport function addPassword(password) {\n    return {type: ADD_PASSWORD, password};\n}\n\nexport function addUsername(name) {\n    return {type: ADD_USERNAME, name};\n}","export class user {\n  constructor(){\n    this.name= '';\n    this.date = null;\n    this.region = null;\n    this.contact= [new contact(1,null,null)];\n    this.education= ''\n    this.educationExperience = [new education(1, null, null)];\n  }\n}\n\n\nexport class contact {\n  constructor(index, name ,link){\n    this.index= index;\n    this.name = name;\n    this.link = link;\n  }\n}\n\nexport class education {\n  constructor(index){\n    this.index = index;\n    this.school = \"\";\n    this.startDate = new Date(0);\n    this.endDate = new Date(0);\n    this.major = \"\";\n    this.courses = \"\";\n  }\n}\n\nexport class workExperience {\n  constructor(index) {\n    this.index = index;\n    this.company = \"\";\n    this.jobTitle = \"\";\n    this.startDate = new Date(0);\n    this.endDate = new Date(0);\n    this.description = \"\";\n  }\n}\n","import { EDIT_NAME, EDIT_DATE, EDIT_REGION, EDIT_EDUCATION, EDIT_CONTACT, EDIT_EDUCATION_INFO , CREATE_WORK, EDIT_WORK, LOG_IN, LOG_OUT, OVER_WRITE_ALL, ADD_PASSWORD, ADD_USERNAME} from \"./actions\";\nimport { combineReducers } from \"redux\";\nimport {contact, education, workExperience} from \"../layout/util\"\n\n\nconst initialState = {\n    login: false,\n    name: \"\", //this is the username \n    password: \"\", \n    profile: {\n        name: '', //this is user's real name\n        date: new Date(0),\n        region:'',\n        education:'',\n        contact:[new contact(0)],\n        educationExperience:[new education(0)],\n        workExperience: [new workExperience(0)]\n    },\n    style: {\n        themeColor: '',\n    }\n}\n\n// console.log(store.getState());\n\nfunction updateUser(state=initialState, action) {\n    var user = state.profile;\n    switch(action.type) {\n        case EDIT_NAME:\n            user.name = action.text;\n            console.log(state);\n            return Object.assign({}, state, user);\n        case EDIT_DATE:\n            user.date = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_REGION:\n            user.region = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION:\n            user.education = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_CONTACT:\n            user.contact = action.contactObject;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION_INFO:\n            user.educationExperience = action.eduObject;\n            return Object.assign({}, state, user);\n        case CREATE_WORK:\n            user.workExperience = [new workExperience(0)];\n            return Object.assign({}, state, user);\n        case EDIT_WORK:\n            user.workExperience = action.workObj;\n            return Object.assign({}, state, user);\n        default:\n            return state;\n    }\n}\n\nfunction updateStyle(state=initialState, action) {\n    return state;\n}\n\nfunction loginStatusChange(state=initialState, action) {\n    switch(action.type) {\n        case LOG_IN:\n            var obj = {login: true };\n            var rtn = Object.assign({}, state, obj);\n            return rtn;\n        case LOG_OUT:\n            // var obj = {login: false };\n            return Object.assign({}, initialState);\n        case OVER_WRITE_ALL:\n            var sub = {'name': action.all.name,\n                'profile': JSON.parse(action.all.profile),\n                'password': action.all.password,\n                'style':JSON.parse(action.all.style)}\n            var rtn = Object.assign({}, state, sub);\n            console.log(rtn);\n            return rtn;\n        case ADD_PASSWORD:\n            var obj = {password: action.password};\n            return Object.assign({}, state, obj);\n        case ADD_USERNAME:\n            var obj = {name: action.name};\n            return Object.assign({}, state, obj);\n        default:\n            return state;\n    }\n}\n\nexport const updateApp = combineReducers({\n    updateUser,\n    updateStyle,\n    loginStatusChange\n})","import { createStore } from 'redux';\nimport {updateApp} from './reducers';\nimport React from 'react';\n\nexport const store = createStore(updateApp)\nexport const context = React.createContext();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState} from 'react';\nimport {contact} from '../util';\nimport { Button, Input, Select, Form} from 'element-react';\nimport 'element-theme-default';\nimport {connect} from 'react-redux'\nimport { editContact } from '../../store/actions';\n\n  const ContactList = ({contacts, dispatch}) => {\n      let menu = ['other','phone','facebook', 'gmail','linkedin','instagram','qq','wechat'];\n      const [isOpen, setIsOpen] = useState(true);\n      const [contactLst, setContactLst] = useState(contacts)\n      const [count, setCount] = useState(0);\n\n      function update(index, type, value) {\n        var c;\n        var nlst = contactLst.slice();\n        for (c of nlst) {\n          if (c.index === index) {\n            if (type === \"type\") {\n              c.name = value;\n            } else {\n              c.link = value;\n            }\n          }\n        }\n        setContactLst(nlst);\n        dispatch(editContact(nlst));\n      }\n\n      function add() {\n        var newLst = contactLst.slice();\n        var c = new contact(count + 1);\n        newLst.push(c);\n        setContactLst(newLst);\n        setCount(count+1);\n        dispatch(editContact(newLst));\n      };\n\n      function remove(index) {\n        \n        var nlst = contactLst.slice();\n        nlst = nlst.filter((i)=> {return i.index !== index})\n        setContactLst(nlst);\n        dispatch(editContact(nlst))\n      };\n\n      function switchState() {\n        setIsOpen(!isOpen);\n      };\n\n      const input = contactLst.map((contact)=>\n        <ContactUnit menu={menu} key={contact.index+'unit'} index={contact.index} value={contact} callBk={update} remove={remove}></ContactUnit>\n      );\n  \n      if(!isOpen) {\n        return(\n          <div className=\"closedContact\">\n            <Button type=\"primary mini\" onClick={switchState}>Expand</Button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <div className=\"openedContactTitle\">\n              {input}\n              <Button type=\"plain mini\" onClick={add}>Add</Button>\n              <Button type=\"primary mini\" onClick={switchState}>Collapse</Button>\n            </div>\n          </div>\n        )\n      }\n\n  }\n\n  function ContactUnit (props) {\n      const allOptions = props.menu;\n      const curr = props.value.index;\n      const update = props.callBk;\n      const index = props.index;\n      const remove = props.remove;\n      const options = allOptions.map(function(option,curr){\n        if (option === curr) {\n          return <Select.Option value={option} key={curr} selected >{option}</Select.Option>\n        } else {\n          return <Select.Option value={option} key={curr}>{option}</Select.Option>\n        }\n      }\n  \n    )\n      const select = <Select name='contactMethods' key={curr+'select'} onChange={e => update(curr, 'type', e)}>{options}</Select>\n      return (\n        <div className=\"contactUnit\">\n          <Form.Item className=\"contactUnit\" key={curr+'div'}>\n            {select} \n          </Form.Item>\n          <Form.Item label=\"link: \">\n            <Input type=\"text\" className=\"contactInput\" key={curr+'input'} value={props.value.link} onChange={e => update(curr, 'value', e)}></Input>\n          </Form.Item>\n          <Button type=\"text\" icon=\"delete\" onClick={()=>remove(index)}></Button>\n        </div>\n      )\n    \n  }\n\n  function mapStateToProps(state) {\n    var contacts = state.updateUser.profile.contact;\n    return {contacts};\n  }\n\n  export default connect(mapStateToProps)(ContactList);\n","import React, { useState} from 'react';\nimport {education} from '../util';\nimport { Button, Input, Select, Layout, Form, DatePicker} from 'element-react';\nimport 'element-theme-default';\nimport { editEducationInfo } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nconst EducationInfo = ({eduExp, dispatch}) => {\n      var edu1 = eduExp;\n      // console.log(eduExp);\n      const [isOpen, setIsOpen] = useState(true);\n      const [count, setCount] = useState(1);\n      const [eduLst, setEduLst] = useState(edu1);\n      const toShow = eduLst.map((eduUnit)=> {return <EducationUnit key={eduUnit.index} index={eduUnit.index} value={eduUnit} callBk={update} delete={remove}></EducationUnit>});\n\n      function switchState() {\n        setIsOpen(!isOpen);\n      }\n    \n      function add() {\n\n        const newEdu= new education(count);\n        setCount(count+1);\n        var nlst = eduLst.slice();\n        nlst.push(newEdu);\n        setEduLst(nlst)\n        dispatch(editEducationInfo(nlst));\n      };\n\n      function remove(index) {\n        var nlst = eduLst.slice();\n        nlst = nlst.filter((i)=> {return i.index != index})\n        setEduLst(nlst);\n        dispatch(editEducationInfo(nlst));\n      };\n\n      function update(index, obj) {\n        var e;\n        var nlst = eduLst.slice();\n        // console.log(obj);\n        for (e of nlst) {\n          if (e.index === index) {\n            e = obj;\n          }\n        }\n        setEduLst(nlst);\n        dispatch(editEducationInfo(nlst));\n      }\n\n      if(!isOpen) {\n          return(\n            <Form.Item label=\"Past Education \">\n              <Button type=\"primary mini\" onClick={switchState}>Expand</Button>\n            </Form.Item>\n          )\n      } else {\n          return(\n              <Form.Item label=\"Past Education \">\n                  {toShow}\n                  <Button type=\"plain mini\" onClick={add}>Add</Button>\n                  <Button type=\"primary mini\" onClick={switchState}>Collapse</Button>\n              </Form.Item>\n          )\n      }\n}\n\nfunction EducationUnit (props) {\n  let eduUnit = props.value;\n  let index = props.index;\n  let update = props.callBk;\n  let remove = props.delete;\n\n  function onChange(value, key) {\n    eduUnit[key] = value;\n    update(eduUnit.index, eduUnit);\n    // forceUpdate();\n  };\n\n  return(\n    <div>\n      <Form.Item label=\"School Name \">\n        <Input placeholder=\"请输入就读学校名称\" value={eduUnit.school} onChange={(e)=>onChange(e, 'school')}></Input>\n      </Form.Item>\n      <Form.Item label=\"Time Span \">\n        <Layout.Col span=\"5\">\n          <Form.Item labelWidth=\"0px\">\n            <DatePicker\n              value={eduUnit.startDate}\n              placeholder=\"start date\"\n              onChange={(e)=> onChange.bind(e, 'startDate')}\n            />\n          </Form.Item>\n        </Layout.Col>\n        <Layout.Col className=\"line\" span=\"1\">-</Layout.Col>\n        <Layout.Col span=\"5\">\n          <Form.Item labelWidth=\"0px\">\n            <DatePicker\n              value={eduUnit.endDate}\n              placeholder=\"end date\"\n              onChange={(e)=>onChange.bind(e, 'endDate')}\n            />\n          </Form.Item>\n          </Layout.Col>\n        </Form.Item>\n      <Form.Item label=\"Major \">\n        <Input placeholder=\"\" value={eduUnit.major} onChange={(e)=> onChange(e, 'major')}></Input>\n      </Form.Item>\n      <Form.Item label=\"Key Courses \">\n        <Input placeholder=\"\"  value={eduUnit.courses} onChange={(e)=> onChange(e, \"courses\")}></Input>\n      </Form.Item>\n      <Button type=\"text\" icon=\"delete\" onClick={() => {remove(index)}}></Button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n    var eduExp = state.updateUser.profile.educationExperience;\n    // console.log(eduExp);\n    return {eduExp};\n}\n\nexport default connect(mapStateToProps)(EducationInfo);","import React, { useState } from 'react';\nimport { Button, Input, Select, Layout, Form, DatePicker} from 'element-react';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\nimport {editWork} from '../../store/actions';\nimport {workExperience} from '../util';\n\nconst WorkExperience = ({works, dispatch}) => {\n    const [isOpen, setIsOpen] = useState(true);\n    const [count, setCount] = useState(1);\n    const [workLst, setWorkLst] = useState(works);\n    const toShow = workLst.map((work)=>{return <WorkUnit key={work.index+\"unit\"} index={work.index} work={work} remove={remove} update={update}></WorkUnit>});\n\n    function switchState() {\n        setIsOpen(!isOpen);\n    }\n\n    function add() {\n        const newWork= new workExperience(count);\n        setCount(count+1);\n        var nlst = workLst.slice();\n        nlst.push(newWork);\n        setWorkLst(nlst)\n        dispatch(editWork(nlst));\n    }\n\n    function update(index, obj) {\n        var e;\n        var nlst = workLst.slice();\n        for (e of nlst) {\n          if (e.index === index) {\n            e = obj;\n          }\n        }\n        setWorkLst(nlst);\n        dispatch(editWork(nlst));\n    }\n\n    function remove(index){\n        var nlst = workLst.slice();\n        nlst = nlst.filter((i)=> {return i.index !== index})\n        setWorkLst(nlst);\n        dispatch(editWork(nlst));\n    }\n\n    if (!isOpen) {\n        return (\n            <Form.Item label=\"Work Experience \">\n              <Button type=\"primary small\" onClick={switchState}>Expand</Button>\n            </Form.Item>\n        )\n    }\n    return(\n        <Form.Item label=\"Work Experience \">\n            {toShow}\n            <Button type=\"primary small\" onClick={add}>Add</Button>\n            <Button type=\"primary small\" onClick={switchState}>Collapse</Button>\n        </Form.Item>\n    )\n}\n\nfunction WorkUnit(props){\n    var index = props.index;\n    var work = props.work;\n    const update = props.update;\n    const remove = props.remove;\n\n    function onChange(value, key) {\n        work[key] = value;\n        update(work.index, work);\n    }\n\n    return(\n        <div>\n        <Form.Item label=\"Company Name: \">\n          <Input placeholder=\"\" value={work.company} onChange={(e)=>onChange(e, 'company') } key={props.index+\"place1\"}></Input>\n        </Form.Item>\n        <Form.Item label=\"Job Title \">\n          <Input placeholder=\"\" value={work.jobTitle} onChange={(e)=>onChange(e, 'jobTitle')} key={props.index+\"position1\"}></Input>\n        </Form.Item>\n        <Form.Item label=\"Time Span \">\n          <Layout.Col span=\"3\">\n            <Form.Item labelWidth=\"0px\">\n              <DatePicker\n                value={work.startDate}\n                placeholder=\"Start Date\"\n                onChange={(e)=> onChange.bind(e, 'startDate')}\n              />\n            </Form.Item>\n          </Layout.Col>\n          <Layout.Col className=\"line\" span=\"4\">-</Layout.Col>\n          <Layout.Col span=\"3\">\n            <Form.Item labelWidth=\"0px\">\n              <DatePicker\n                value={work.endDate}\n                placeholder=\"End Date\"\n                onChange={(e)=>onChange.bind(e, 'endDate')}\n              />\n            </Form.Item>\n            </Layout.Col>\n          </Form.Item>\n        <Form.Item label=\"Job Dscription \">\n          <Input placeholder=\"\"  value={work.description} onChange={(e)=> onChange(e, \"description\")}></Input>\n        </Form.Item>\n        <Button type=\"text\" icon=\"delete\" onClick={() => {remove(index)}}></Button>\n      </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    var works = state.updateUser.profile.workExperience;\n    // console.log(eduExp);\n    return {works};\n}\n\nexport default connect(mapStateToProps)(WorkExperience);","import axios from \"axios\";\nimport { isError } from \"util\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:3001/\",\n    responseType: \"json\"\n  });\n\nexport async function validateUser(user) {\n    var query = \"?name=\"+user.name+\"&password=\"+user.password;\n    return axios({\n        method: 'get',\n        url: 'https://localhost:3001/login'+query,\n        responseType: \"json\",\n    }) //if the user exists, redirect to user's homepage\n} \n\nexport async function register(data) {\n    return axios({\n        method: \"post\",\n        url:\"localhost:3001/register\",\n        data:data,\n        responseType:\"json\",\n    }) // then pop up a panel to redirect user to his personal page\n}\n\nexport async function editUser(data) {\n    return axios({\n        method: \"post\",\n        url:'localhost:3001/edit',\n        data:data,\n        responseType:\"json\",\n    })\n}","import React, { useState } from 'react';\nimport ContactList from './ContactList';\nimport EducationInfo from './EducationInfo';\nimport WorkExperience from './WorkExperience';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport API from '../../api/api';\nimport {editName, editRegion, editDate, editEducation} from '../../store/actions';\nimport { Button, Form, Input, Select, DatePicker, Dialog, Message} from 'element-react';\nimport 'element-theme-default';\n\n  const InfoForm = ({Name, Region, birthDate, Edu, dispatch, login, profile, username, password}) => {\n    const [name, setName] = useState(Name);\n    const [region, setRegion] = useState(Region);\n    const [date, setDate] = useState(birthDate);\n    const [edu, setEdu] = useState(Edu);\n    const [dialogVisible, setDialogVisible] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n\n    async function submitEdit() {\n      if(!login) {\n        setDialogVisible(true);\n      } else { \n        let response = await API.post('/edit', {\n          \"name\": username,\n          \"password\": password,\n          \"profile\": JSON.stringify(profile),\n        });\n        console.log(response);\n        if (response.status == 200 && response.data.affectedRows == 1) {\n          Message({\n            message: \"Your profile has been updated.\",\n            type: \"success\"});\n        } else {\n          Message({\n            message: 'Profile update failed',\n            type: 'warning'\n          });\n        }\n      }\n    }\n\n    if (redirect) {\n      return <Redirect to=\"/login\" />\n    }\n\n      return (\n        <Form labelWidth=\"70\">\n          <Form.Item label=\"Name \">\n            <Input value={name} placeholder=\"Please input your name\" onChange={(e)=> {setName(e); dispatch(editName(e));}}></Input>\n          </Form.Item>\n          <Form.Item label=\"Region \">\n            <Select placeholder=\"请选择活动区域\" value={region} onChange={(e)=> {setRegion(e); dispatch(editRegion(e))}}>\n              <Select.Option label=\"Shanghai\" value=\"shanghai\"></Select.Option>\n              <Select.Option label=\"Beijing\" value=\"beijing\"></Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Birthdate \">\n              <DatePicker\n                  value={date}\n                  placeholder=\"PLease choose month and year\"\n                  onChange={(e)=> {setDate(e); dispatch(editDate(e))}}\n                />\n          </Form.Item>\n          <Form.Item label=\"学历 \">\n            <Select value={edu} placeholder=\"请选择您的最高学历\" onChange={(e)=>{setEdu(e); dispatch(editEducation(e))}}>\n              <Select.Option label=\"Junor High\" value=\"Junor High\"></Select.Option>\n              <Select.Option label=\"Senior High\" value=\"Senior High\"></Select.Option>\n              <Select.Option label=\"Bachelor\" value=\"Bachelor\"></Select.Option>\n              <Select.Option label=\"Master\" value=\"Master\"></Select.Option>\n              <Select.Option label=\"phD or higher\" value=\"phD or higher\"></Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Contact \">\n            <ContactList></ContactList>\n          </Form.Item>\n          <EducationInfo></EducationInfo>\n          <WorkExperience></WorkExperience>\n          <Dialog\n            title=\"Alert\"\n            size=\"small\"\n            visible={ dialogVisible }\n            onCancel={ () => setDialogVisible(false) }\n            lockScroll={ false }\n          >\n            <Dialog.Body>\n              <span>Please login before you update your webpage content</span>\n            </Dialog.Body>\n            <Dialog.Footer className=\"dialog-footer\">\n              <Button onClick={ () => setDialogVisible(false)}>Cancel</Button>\n              <Button type=\"primary\" onClick={ () => {setDialogVisible(false); setRedirect(true) }}>Login or Register</Button>\n            </Dialog.Footer>\n          </Dialog>\n          <Form.Item>\n            <Button type=\"primary\" onClick={submitEdit}>Deploy my Webpage</Button>\n            <Button>Cancel</Button>\n          </Form.Item>\n        </Form>\n      )\n  }\n\n  function mapStateToProps(state) {\n    var user = state.updateUser.profile;\n    var login = state.loginStatusChange.login;\n    var username = state.loginStatusChange.name;\n    var password = state.loginStatusChange.password;\n    return {\n      profile: user,\n      username,\n      password,\n      Name: user.name,\n      birthDate: user.date,\n      Region: user.region,\n      Edu: user.education,\n      login\n      }\n  }\n\n  export default connect(mapStateToProps)(InfoForm);","import React, { Component } from 'react';\nimport InfoForm from './InfoForm';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\n\nclass LeftPanel extends Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      var person = this.props.profile;\n      var update=this.props.upd;\n      return(\n        <div >\n            <InfoForm user={person}></InfoForm>\n        </div>\n      )\n    }\n  }\n\n  function mapStateToProps(state) {\n    const user = state.updateUser.profile;\n    return {user};\n  }\n\n  export default connect(mapStateToProps)(LeftPanel);\n  ","import React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport { Layout, Button} from 'element-react';\nimport 'element-theme-default';\n\nconst Contacts = ({contactLst}) => {\n    const toShow = contactLst.map((c) => {return <Button key={c.index}>{c.name}</Button>})\n    return (\n        <Layout.Row gutter=\"20\" className=\"contactDiv\">\n            <Layout.Col span=\"12\" offset=\"6\">\n                {toShow}\n            </Layout.Col>\n        </Layout.Row>\n    )\n}\n\nfunction mapStateToProps(state) {\n    var contactLst = state.updateUser.profile.contact;\n    return {contactLst};\n  }\n  \n  export default connect(mapStateToProps)(Contacts);","import React from 'react';\nimport {connect} from 'react-redux'\nimport {Card} from 'element-react';\nimport Contacts from './Contacts';\nimport 'element-theme-default';\n\nconst Bio = ({name, region, date, education}) => {\n    // console.log(\"rendered \");\n    const userName = name;\n    const userRegion = region;\n    const userDate = date;\n    const userEdu = education;\n    return(\n        <div>\n            <Card>\n                <div>name: {userName}</div>\n                {/* <div>birthday: {userDate}</div> */}\n                <div>region: {userRegion}</div>\n                <div>education: {userEdu}</div>\n            </Card>\n            <Contacts></Contacts>\n        </div>\n        \n    );\n}\n\n\nfunction mapStateToProps(state) {\n    var user = state.updateUser.profile;\n    return {\"name\": user.name,\n            \"region\": user.region,\n            \"date\": user.date,\n            \"education\":user.education};\n  }\n  \n  export default connect(mapStateToProps)(Bio);","import React, { useState } from 'react';\nimport {connect} from 'react-redux';\nimport {Card,Layout} from 'element-react';\n\nfunction Edu({eduExp}) {\n    const eduLst = eduExp;\n    const show = eduLst.map(edu => {return <Card key={edu.index}>\n        <div>School Name: {edu.school}</div>\n        <div>Major: {edu.major}</div>\n        <div>Fields of study: {edu.courses}</div>\n    </Card>})\n    return(\n      <Layout.Row  className = \"educationExperience\">\n          {show}\n      </Layout.Row>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n  var user = state.updateUser.profile;\n  return {eduExp : user.educationExperience};\n}\n\nexport default connect(mapStateToProps)(Edu);","import React from 'react';\nimport {connect} from 'react-redux'\nimport {Card} from 'element-react';\nimport Contacts from './Contacts';\nimport 'element-theme-default';\n\nconst Work = ({work}) => {\n    const curr = work;\n    const show = curr.map((w)=> {\n        return <Card key={w.index+ \"card\"}>\n            <div>Comapny Name: {w.company}</div>\n            <div>Job Title: {w.jobTitle}</div>\n            <div>Description: {w.description}</div>\n        </Card>\n    })\n    return(\n        <div>\n            {show}\n        </div>\n        \n    );\n}\n\n\nfunction mapStateToProps(state) {\n    var work = state.updateUser.profile.workExperience;\n    return {work};\n  }\n  \n  export default connect(mapStateToProps)(Work);","import React, { useState, useEffect } from 'react';\nimport {connect} from 'react-redux'\nimport { Menu, Button} from 'element-react';\nimport Bio from './Bio';\nimport Edu from './Edu';\nimport Work from './Work';\n// import 'element-theme-default';\n\nfunction RightPanel(props, {user}) {\n  const [page, setPage] = useState(\"bio\"); //three states (bio, edu, work)\n  var show;\n  if (page === \"bio\") {\n      show = <Bio></Bio>;\n  } else if (page=== \"edu\") {\n      show = <Edu></Edu>;\n  } else if (page === \"work\") {\n      show = <Work></Work>\n  }\n\n  // useEffect(() =>{\n  //     // console.log(\"update\")\n  //   }\n  // );\n\n    function onSelect(e) {\n      setPage(e);\n    };\n\n    return(\n      <div className = \"RightPanel\">\n          <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" onSelect={onSelect.bind(this)}>\n            <Menu.Item index=\"bio\">基础信息</Menu.Item>\n            <Menu.Item index=\"edu\">学术经历</Menu.Item>\n            <Menu.Item index=\"work\">就业经历</Menu.Item>\n          </Menu>\n          {show}\n          <CollapseBtn expandRight = {props.expandRight}/>\n      </div>\n    )\n}\n\nfunction CollapseBtn(props) {\n    return(\n      <Button  type=\"primary\" onClick = {()=>props.expandRight()} icon=\"view\">\n      </Button>\n    )\n}\n\nfunction mapStateToProps(state) {\n  var user = state.updateUser.profile;\n  return {user};\n}\n\nexport default connect(mapStateToProps)(RightPanel);","import React, {useState} from 'react';\nimport 'element-theme-default';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport {Menu, Dialog, Button} from 'element-react';\n\nconst NavBar = ({login, name}) => {\n  const [needToLogin, setNeedToLogin] = useState(login);\n  const [redirectToView, setRedirectToView] = useState(false);\n  const [dialogVisible, setDialogVisible] = useState(false);\n  const [needToLogOut, setNeedToLogOut] = useState(false);\n\n  function onSelect(e) {\n    if (e===\"2-1\" ) {\n      if (!login) { setNeedToLogin(!needToLogin) }\n      else {\n        setNeedToLogOut(true);\n        // setNeedToLogin(true);\n      }     \n    } else if (e==='1') {\n      if (!login) {\n        setDialogVisible(true);\n        // setNeedToLogin(true);\n      } else {\n        setRedirectToView(true);\n      }\n    }\n  }\n\n  var status = login ? \"log out\":\"login\"\n  if (needToLogin) {\n    return (<Redirect to=\"/login\"></Redirect>)\n  } else if (redirectToView) {\n    return (<Redirect to={\"/home/\"+name} />)\n  } else if (needToLogOut) {\n    return (<Redirect to=\"/\"></Redirect>)\n  }\n  return(\n    <div>\n      <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" className=\"bg-light topNav\" onSelect={onSelect}>\n        <div className=\"navbar-brand\">Resuwee</div>\n        <Menu.Item index=\"1\" className=\"nav-link\">Visit My Webpage</Menu.Item>\n        <Menu.Item index=\"2-1\" className=\"nav-link\">{status}</Menu.Item>\n        {/* <Menu.SubMenu index=\"2\" className=\"nav-link\" title=\"About\">\n          <Menu.Item index=\"2-2\">Help</Menu.Item>\n          <Menu.Item index=\"2-3\">Contact Us</Menu.Item>\n        </Menu.SubMenu> */}\n        <Menu.Item index=\"3\" className=\"nav-link\">Donate</Menu.Item>\n        <Dialog\n            title=\"Alert\"\n            size=\"small\"\n            visible={ dialogVisible }\n            onCancel={ () => setDialogVisible(false) }\n            lockScroll={ false }\n          >\n            <Dialog.Body>\n              <span>Please login before you can preview your webpage</span>\n            </Dialog.Body>\n            <Dialog.Footer className=\"dialog-footer\">\n              <Button onClick={ () => setDialogVisible(false)}>Cancel</Button>\n              <Button type=\"primary\" onClick={ () => {setDialogVisible(false); setNeedToLogin(true) }}>Login or Register</Button>\n            </Dialog.Footer>\n          </Dialog>\n      </Menu>\n    </div>\n  )\n\n}\n\nfunction mapStateToProps(state) {\n  const login = state.loginStatusChange.login;\n  const name = state.updateUser.name;\n  return {login,name};\n}\n\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react';\nimport logo from './assets/logo.svg';\nimport './style/App.css';\nimport LeftPanel from './layout/leftPanel/LeftPanel'\nimport RightPanel from './layout/rightPanel/RightPanel'\nimport NavBar from './layout/NavBar'\nimport { Layout } from 'element-react';\nimport 'element-theme-default';\nimport { connect } from 'react-redux';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.binded = this.expandRight.bind(this);\n    this.state = {\n      rightIsExpanded: false,\n    };\n\n  }\n  expandRight() {\n    this.setState({rightIsExpanded:!this.state.rightIsExpanded});\n  };\n\n  render() {\n    // console.log(this.state.user);\n      const newContent = \"This is the expanded right panel\";\n      if(this.state.rightIsExpanded){\n        return(\n        <div>\n          <NavBar />\n          <Layout.Col span='24'>\n            <RightPanel className = \"expanded\" content = {newContent} expandRight = {this.binded}/>  \n          </Layout.Col>\n          \n        </div>);\n      } else {\n        return(\n        <div>\n          <NavBar />\n          <Layout.Col span='12'>\n            <LeftPanel className=\"LeftPanel\"/>\n          </Layout.Col>\n          <Layout.Col span=\"12\">\n            <RightPanel className=\"RightPanel\" expandRight = {this.binded}/>\n          </Layout.Col>\n        </div>);\n      }\n\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\n\nexport default connect(mapStateToProps)(App);\n","import React, {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { Menu, Message, Card} from 'element-react';\nimport API from '../api/api';\nimport Bio from './rightPanel/Bio';\nimport Edu from './rightPanel/Edu';\nimport Work from './rightPanel/Work';\nimport {editName, editContact, editDate, editEducation, editEducationInfo, editRegion, editWork} from '../store/actions'\n// import 'element-theme-default';\n\nfunction View(props, {user, login, dispatch}) {\n  console.log(window.location.href);\n  const container = props.dispatch;\n  console.log(container);\n  // console.log(props.location.pathname);\n  // props.dispatch(editName(\"test\"));\n  const path = props.location.pathname.split(\"/\");\n  const name = path[2];\n  const [profile, setProfile] = useState(user);\n  const [bio, setBio] = useState(\"\");\n\n  useEffect(()=>{\n    async function fetchData(){\n      let userData = await API.get('/view', {\n        params: {\n            \"name\": name,\n        }\n      })\n      // console.log(userData);\n      if (userData.status == 200) {\n        var temp = JSON.parse(userData.data.profile);\n        setProfile(userData.data.profile);\n        // console.log(profile);\n        // setName(userData.data.profile.name);\n        console.log(temp);\n        container(editName(temp.name));\n        container(editRegion(temp.region));\n        container(editEducation(temp.education));\n        container(editContact(temp.contact));\n        container(editWork(temp.workExperience));\n        container(editEducationInfo(temp.educationExperience));\n      } else {\n        Message({\n          showClose: true,\n          message: 'Network Error',\n          type: 'error'\n        });\n      }\n\n    }\n    fetchData();\n  }, [])\n  \n  const [page, setPage] = useState(\"bio\"); //three states (bio, edu, work)\n  var show;\n  // console.log(profile);\n  if (page === \"bio\") {\n      show = <Bio></Bio>\n      // dispatch(editName(\"test\"));\n  } else if (page=== \"edu\") {\n      show = <Edu></Edu>;\n  } else if (page === \"work\") {\n      show = <Work></Work>\n  }\n\n    function onSelect(e) {\n      setPage(e);\n    };\n\n    return(\n      <div className = {props.className}>\n          <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" onSelect={onSelect.bind(this)}>\n            <Menu.Item index=\"bio\">基础信息</Menu.Item>\n            <Menu.Item index=\"edu\">学术经历</Menu.Item>\n            <Menu.Item index=\"work\">就业经历</Menu.Item>\n          </Menu>\n          {show}\n      </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n  var user = state.updateUser.profile;\n  var login = state.loginStatusChange.login;\n  return {user, login};\n}\n\nconst mapDispatchToProps = dispatch => {\n  console.log(dispatch);\n  return {\n    // dispatching plain actions\n    // setName: (e) => dispatch(editName(e)),\n    // setRegion: (e) => dispatch(editRegion(e)),\n    // setEducation: (e) => dispatch(editEducation(e))\n    dispatch\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);","import React, { useState } from 'react';\nimport 'element-theme-default';\nimport {connect} from 'react-redux';\nimport API from '../api/api';\nimport { Redirect } from 'react-router-dom'\nimport {login, addPassword, addUsername, editName, editRegion, editContact, editEducation, editDate, editWork, editEducationInfo} from '../store/actions'\nimport {Card, Form, Input, Button} from 'element-react';\n\nfunction Login ({dispatch, profile, style}) {\n    //register state variable, check react hook for detail\n    const [mode, setMode] = useState(\"login\"); //record the current mode (login or register)\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [text, setText] = useState(\"Don't have an account\"); //the text on transition button which trigger the switch between \"login\" and \"register\"\n    const [back, setBack] = useState(false); //the variable recording whether user want to return to homepage\n    const [warn, setWarn] = useState(\"\");\n    function changeMode() {\n        if (mode === \"login\") {\n            setMode(\"register\");\n            setText(\"Already have account?\")\n        } else {\n            setMode(\"login\");\n            setText(\"Don't have an account\")\n        }\n    }\n\n    async function validateLogin() {  \n            // Load async data.\n        if (mode === \"login\") {\n            let userData = await API.get('/login', {\n                params: {\n                    \"name\": name,\n                    \"password\":password,\n                }\n            })\n            // console.log(userData);\n            if (userData.status == 200) {\n                setWarn(\"\");\n                var profile = JSON.parse(userData.data.profile);\n                // console.log(profile);\n                dispatch(editName(profile.name));\n                dispatch(editRegion(profile.region));\n                dispatch(editEducation(profile.education))\n                dispatch(editContact(profile.contact));\n                dispatch(editDate(new Date(profile.date)));\n                dispatch(editEducationInfo(profile.educationExperience));\n                dispatch(editWork(profile.workExperience));\n                // dispatch(overWriteAll(userData.data));\n                setBack(true);\n                dispatch(login());\n            } else {\n                setWarn(\"user not found\");\n            }\n        } else {\n            let userData = await API.post('/register', {\n                    \"name\": name,\n                    \"password\": password,\n                    \"profile\":JSON.stringify(profile),\n                    \"style\":JSON.stringify(style),\n                })\n            // console.log(userData);\n            if (userData.status == 200) {\n                dispatch(login());\n                setWarn(\"register succeeded\");\n                setBack(true);\n            } else {\n                setWarn(\"registration failed, please contact developer\")\n            }\n        }\n        \n    }\n\n    if (back) {\n        return <Redirect to=\"/\"/>\n    }\n    return (\n        <div className=\"loginPage\">\n            <Card className=\"login\">\n                <Form>\n                    <Form.Item label=\"userName: \">\n                        <Input onChange={e =>{ setName(e); dispatch(addUsername(e))}}>\n                        </Input>\n                    </Form.Item>\n                    <Form.Item label=\"password:\">\n                        <Input onChange={e => {setPassword(e);dispatch(addPassword(e))}}>\n                        </Input>\n                    </Form.Item>\n                    <Button plain onClick={changeMode}>{text}</Button>\n                    <Button onClick={validateLogin}>{mode}</Button>\n                    <Button onClick={()=>setBack(true)}>back</Button>\n                    <div>{warn}</div>\n                </Form>\n            </Card>\n        </div>\n    )\n}\n\n//this function is a helper function of connect(). It extract the variable required to render this component(Login)\nfunction mapStateToProps(state) {\n    var profile = state.updateUser.profile;\n    var style = state.updateStyle.style;\n    return {profile, style};\n  }\n  \n\n  //connect()(component) connects the component to the global state, which records all global variables \nexport default connect(mapStateToProps)(Login);","import React from 'react'\nimport { BrowserRouter as Router, Route,} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport App from '../App'\nimport View from '../layout/View'\nimport Login from '../layout/Login'\n\nconst Direct = () =>\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App}/>\n      <Route path=\"/home\" component={View}/>\n      <Route path=\"/login\" component={Login}/>\n    </div>\n  </Router>\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps)(Direct);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {store} from './store/index'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Direct from './routes/Direct.jsx';\n\nvar root = document.getElementById('root');\n\nReactDOM.render(<Provider store={store}>\n                    <Direct></Direct>\n                </Provider> , root );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}