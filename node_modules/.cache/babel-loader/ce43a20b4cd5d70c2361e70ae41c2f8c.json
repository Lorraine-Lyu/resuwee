{"ast":null,"code":"import _classCallCheck from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lorrainelyu/Desktop/my-app/src/layout/leftPanel/ContactList.js\";\nimport React, { Component } from 'react';\nimport { contact } from '../util';\nimport { Button, Input, Select } from 'element-react';\nimport 'element-theme-default';\nimport { editContact } from '../../store/actions';\n\nvar ContactList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactList, _Component);\n\n  function ContactList(props) {\n    var _this;\n\n    _classCallCheck(this, ContactList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactList).call(this, props));\n    _this.expand = _this.expand.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.add = _this.add.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.update = _this.update.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var c = new contact();\n    _this.state = {\n      isOpen: true,\n      menu: ['other', 'phone', 'facebook', 'gmail', 'linkedin', 'instagram', 'qq', 'wechat'],\n      info: [c],\n      count: 1\n    };\n    return _this;\n  }\n\n  _createClass(ContactList, [{\n    key: \"expand\",\n    value: function expand() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var newContact = new contact(this.state.count + 1);\n      var nlst = this.state.info.slice();\n      nlst.push(newContact);\n      this.setState({\n        info: nlst,\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(index, type, value) {\n      var lst = this.state.info.slice(); // console.log(index);\n\n      var c;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = lst[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          c = _step.value;\n\n          if (c.index === index) {\n            if (type === 'type') {\n              c.name = value;\n            } else {\n              c.value = value;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.setState({\n        info: lst\n      });\n      StorageEvent.dispatch(editContact(lst));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var contacts = this.state.info;\n      var input = contacts.map(function (contact) {\n        return React.createElement(ContactUnit, {\n          menu: _this2.state.menu,\n          key: contact.index + 'unit',\n          value: contact,\n          callBk: _this2.update,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      });\n\n      if (!this.state.isOpen) {\n        return React.createElement(\"div\", {\n          className: \"closedContact\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary small\",\n          onClick: this.expand,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Expand\"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"openedContactTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, input, React.createElement(Button, {\n        type: \"primary small\",\n        onClick: this.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Button, {\n        type: \"primary small\",\n        onClick: this.expand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Collapse\")));\n    }\n  }]);\n\n  return ContactList;\n}(Component);\n\nvar ContactUnit =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ContactUnit, _Component2);\n\n  function ContactUnit(props) {\n    _classCallCheck(this, ContactUnit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactUnit).call(this, props));\n  }\n\n  _createClass(ContactUnit, [{\n    key: \"render\",\n    value: function render() {\n      var allOptions = this.props.menu;\n      var curr = this.props.value.index;\n      var update = this.props.callBk;\n      var options = allOptions.map(function (option, curr, update) {\n        if (option === curr) {\n          return React.createElement(Select.Option, {\n            value: option,\n            key: curr,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, option);\n        } else {\n          return React.createElement(Select.Option, {\n            value: option,\n            key: curr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, option);\n        }\n      }); // console.log(curr);\n\n      var select = React.createElement(Select, {\n        name: \"contactMethods\",\n        key: curr + 'select',\n        onChange: update(curr, 'type', this.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, options);\n      return React.createElement(\"div\", {\n        className: \"contactUnit\",\n        key: this.props.index + 'div',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, select, \"link: \", React.createElement(Input, {\n        type: \"text\",\n        className: \"contactInput\",\n        key: curr + 'input',\n        value: this.props.value.link,\n        onChange: update(curr, 'value', this.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactUnit;\n}(Component);\n\nexport default ContactList;","map":{"version":3,"sources":["/Users/lorrainelyu/Desktop/my-app/src/layout/leftPanel/ContactList.js"],"names":["React","Component","contact","Button","Input","Select","editContact","ContactList","props","expand","bind","add","update","c","state","isOpen","menu","info","count","setState","newContact","nlst","slice","push","index","type","value","lst","name","StorageEvent","dispatch","contacts","input","map","ContactUnit","allOptions","curr","callBk","options","option","select","link"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {contact} from '../util';\nimport { Button, Input, Select} from 'element-react';\nimport 'element-theme-default';\nimport { editContact } from '../../store/actions';\n\n  class ContactList extends Component {\n    constructor(props) {\n      super(props);\n      this.expand = this.expand.bind(this);\n      this.add = this.add.bind(this);\n      this.update = this.update.bind(this);\n      var c = new contact();\n      this.state = {\n        isOpen: true,\n        menu :['other','phone','facebook', 'gmail','linkedin','instagram','qq','wechat'],\n        info : [c],\n        count : 1,\n      };\n    }\n  \n    expand(){\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  \n    add(){\n      const newContact= new contact(this.state.count+1);\n      const nlst = this.state.info.slice();\n      nlst.push(newContact);\n      this.setState({\n        info : nlst,\n        count:this.state.count+1,\n      });\n    }\n  \n    update(index,type,value){\n      const lst = this.state.info.slice();\n      // console.log(index);\n      var c;\n        for (c of lst) {\n          if (c.index === index) {\n            if(type === 'type') {\n              c.name = value;\n            } else {\n              c.value = value;\n            }\n          }\n        }\n      this.setState({\n        info: lst\n      })\n      StorageEvent.dispatch(editContact(lst));\n      }\n  \n    render(){\n      const contacts = this.state.info;\n      const input = contacts.map((contact)=>\n        <ContactUnit menu={this.state.menu} key={contact.index+'unit'} value={contact} callBk={this.update}></ContactUnit>\n    );\n  \n      if(!this.state.isOpen) {\n        return(\n          <div className=\"closedContact\">\n            <Button type=\"primary small\" onClick={this.expand}>Expand</Button>\n          </div>\n        )\n      }\n      return (\n        <div>\n          <div className=\"openedContactTitle\">\n            {input}\n            <Button type=\"primary small\" onClick={this.add}>Add</Button>\n            <Button type=\"primary small\" onClick={this.expand}>Collapse</Button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  class ContactUnit extends Component{\n    constructor(props) {\n      super(props);\n    }\n    render(){\n      const allOptions = this.props.menu;\n      const curr = this.props.value.index;\n      const update = this.props.callBk;\n      const options = allOptions.map(function(option,curr,update){\n        if (option === curr) {\n          return <Select.Option value={option} key={curr} selected >{option}</Select.Option>\n        } else {\n          return <Select.Option value={option} key={curr}>{option}</Select.Option>\n        }\n      }\n  \n    );\n      // console.log(curr);\n      const select = <Select name='contactMethods' key={curr+'select'} onChange={update(curr, 'type', this.value)}>{options}</Select>\n      return (\n        <div className=\"contactUnit\" key={this.props.index+'div'}>\n          {select} \n          link: <Input type=\"text\" className=\"contactInput\" key={curr+'input'} value={this.props.value.link} onChange={update(curr, 'value', this.value)}></Input>\n        </div>\n      )\n    }\n  }\n\n  export default ContactList;\n"]},"metadata":{},"sourceType":"module"}