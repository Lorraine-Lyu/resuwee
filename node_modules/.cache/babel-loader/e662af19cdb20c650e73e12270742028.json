{"ast":null,"code":"import { EDIT_NAME, EDIT_DATE, EDIT_REGION, EDIT_EDUCATION, EDIT_CONTACT, EDIT_EDUCATION_INFO } from \"./actions\";\nimport { combineReducers } from \"redux\";\nimport { contact, educationExperience } from \"../layout/util\";\nvar initialState = {\n  user: {\n    name: '',\n    date: '',\n    region: '',\n    education: '',\n    contact: [new contact()],\n    educationExperience: []\n  } // console.log(store.getState());\n\n};\n\nfunction updateUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var user = state.user;\n\n  switch (action.type) {\n    case EDIT_NAME:\n      user.name = action.text;\n      console.log(state);\n      return Object.assign({}, state, user);\n\n    case EDIT_DATE:\n      user.date = action.text;\n      return Object.assign({}, state, user);\n\n    case EDIT_REGION:\n      user.region = action.text;\n      return Object.assign({}, state, user);\n\n    case EDIT_EDUCATION:\n      user.education = action.text;\n      return Object.assign({}, state, user);\n\n    case EDIT_CONTACT:\n      user.contact = action.contactObject;\n      return Object.assign({}, state, user);\n\n    case EDIT_EDUCATION_INFO:\n      user.educationExperience = action.educationObject;\n      return Object.assign({}, state, user);\n\n    default:\n      return state;\n  }\n}\n\nfunction updateStyle() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n}\n\nexport var updateApp = combineReducers({\n  updateUser: updateUser,\n  updateStyle: updateStyle\n});","map":{"version":3,"sources":["/Users/lorrainelyu/Desktop/my-app/src/store/reducers.js"],"names":["EDIT_NAME","EDIT_DATE","EDIT_REGION","EDIT_EDUCATION","EDIT_CONTACT","EDIT_EDUCATION_INFO","combineReducers","contact","educationExperience","initialState","user","name","date","region","education","updateUser","state","action","type","text","console","log","Object","assign","contactObject","educationObject","updateStyle","updateApp"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4DC,YAA5D,EAA0EC,mBAA1E,QAAqG,WAArG;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAAQC,OAAR,EAAiBC,mBAAjB,QAA2C,gBAA3C;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,EADJ;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,MAAM,EAAC,EAHL;AAIFC,IAAAA,SAAS,EAAC,EAJR;AAKFP,IAAAA,OAAO,EAAC,CAAC,IAAIA,OAAJ,EAAD,CALN;AAMFC,IAAAA,mBAAmB,EAAC;AANlB,GADW,CAWrB;;AAXqB,CAArB;;AAaA,SAASO,UAAT,GAAgD;AAAA,MAA5BC,KAA4B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;AAC5C,MAAIP,IAAI,GAAGM,KAAK,CAACN,IAAjB;;AACA,UAAOO,MAAM,CAACC,IAAd;AACI,SAAKlB,SAAL;AACIU,MAAAA,IAAI,CAACC,IAAL,GAAYM,MAAM,CAACE,IAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ,SAAKT,SAAL;AACIS,MAAAA,IAAI,CAACE,IAAL,GAAYK,MAAM,CAACE,IAAnB;AACA,aAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ,SAAKR,WAAL;AACIQ,MAAAA,IAAI,CAACG,MAAL,GAAcI,MAAM,CAACE,IAArB;AACA,aAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ,SAAKP,cAAL;AACIO,MAAAA,IAAI,CAACI,SAAL,GAAiBG,MAAM,CAACE,IAAxB;AACA,aAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ,SAAKN,YAAL;AACIM,MAAAA,IAAI,CAACH,OAAL,GAAeU,MAAM,CAACO,aAAtB;AACA,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ,SAAKL,mBAAL;AACIK,MAAAA,IAAI,CAACF,mBAAL,GAA2BS,MAAM,CAACQ,eAAlC;AACA,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBN,IAAzB,CAAP;;AACJ;AACI,aAAOM,KAAP;AArBR;AAuBH;;AAED,SAASU,WAAT,GAAiD;AAAA,MAA5BV,KAA4B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;AAC7C,SAAOD,KAAP;AACH;;AAED,OAAO,IAAMW,SAAS,GAAGrB,eAAe,CAAC;AACrCS,EAAAA,UAAU,EAAVA,UADqC;AAErCW,EAAAA,WAAW,EAAXA;AAFqC,CAAD,CAAjC","sourcesContent":["import { EDIT_NAME, EDIT_DATE, EDIT_REGION, EDIT_EDUCATION, EDIT_CONTACT, EDIT_EDUCATION_INFO } from \"./actions\";\nimport { combineReducers } from \"redux\";\nimport {contact, educationExperience} from \"../layout/util\"\n\n\nconst initialState = {\n    user: {\n        name: '',\n        date: '',\n        region:'',\n        education:'',\n        contact:[new contact()],\n        educationExperience:[]\n    },\n}\n\n// console.log(store.getState());\n\nfunction updateUser(state=initialState, action) {\n    var user = state.user;\n    switch(action.type) {\n        case EDIT_NAME:\n            user.name = action.text;\n            console.log(state);\n            return Object.assign({}, state, user);\n        case EDIT_DATE:\n            user.date = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_REGION:\n            user.region = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION:\n            user.education = action.text;\n            return Object.assign({}, state, user);\n        case EDIT_CONTACT:\n            user.contact = action.contactObject;\n            return Object.assign({}, state, user);\n        case EDIT_EDUCATION_INFO:\n            user.educationExperience = action.educationObject;\n            return Object.assign({}, state, user);\n        default:\n            return state;\n    }\n}\n\nfunction updateStyle(state=initialState, action) {\n    return state;\n}\n\nexport const updateApp = combineReducers({\n    updateUser,\n    updateStyle\n})"]},"metadata":{},"sourceType":"module"}