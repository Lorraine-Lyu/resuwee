{"ast":null,"code":"import _classCallCheck from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/lorrainelyu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lorrainelyu/Desktop/my-app/src/layout/leftPanel/ContactList.js\";\n\nimport React, { Component } from 'react';\nimport { contact } from '../util';\nimport { Button, Input, Select } from 'element-react';\nimport 'element-theme-default';\nimport { editContact } from '../../store/actions';\n\nvar ContactList = function ContactList(_ref) {\n  var dispatch = _ref.dispatch;\n  var menu = ['other', 'phone', 'facebook', 'gmail', 'linkedin', 'instagram', 'qq', 'wechat'];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var con = new contact();\n\n  var _useState3 = useState([con]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contactLst = _useState4[0],\n      setContactLst = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      count = _useState6[0],\n      setCount = _useState6[1];\n\n  var input = contactLst.map(function (contact) {\n    return React.createElement(ContactUnit, {\n      menu: menu,\n      key: contact.index + 'unit',\n      value: contact,\n      callBk: update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n\n  if (!isOpen) {\n    return React.createElement(\"div\", {\n      className: \"closedContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary small\",\n      onClick: setIsOpen(!isOpen),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Expand\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"openedContactTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, input, React.createElement(Button, {\n    type: \"primary small\",\n    onClick: _this.add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Add\"), React.createElement(Button, {\n    type: \"primary small\",\n    onClick: setIsOpen(!isOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Collapse\")));\n};\n\nvar ContactUnit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactUnit, _Component);\n\n  function ContactUnit(props) {\n    _classCallCheck(this, ContactUnit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactUnit).call(this, props));\n  }\n\n  _createClass(ContactUnit, [{\n    key: \"render\",\n    value: function render() {\n      var allOptions = this.props.menu;\n      var curr = this.props.value.index;\n      var update = this.props.callBk;\n      var options = allOptions.map(function (option, curr, update) {\n        if (option === curr) {\n          return React.createElement(Select.Option, {\n            value: option,\n            key: curr,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, option);\n        } else {\n          return React.createElement(Select.Option, {\n            value: option,\n            key: curr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, option);\n        }\n      }); // console.log(curr);\n\n      var select = React.createElement(Select, {\n        name: \"contactMethods\",\n        key: curr + 'select',\n        onChange: update(curr, 'type', this.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, options);\n      return React.createElement(\"div\", {\n        className: \"contactUnit\",\n        key: this.props.index + 'div',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, select, \"link: \", React.createElement(Input, {\n        type: \"text\",\n        className: \"contactInput\",\n        key: curr + 'input',\n        value: this.props.value.link,\n        onChange: update(curr, 'value', this.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactUnit;\n}(Component);\n\nexport default ContactList;","map":{"version":3,"sources":["/Users/lorrainelyu/Desktop/my-app/src/layout/leftPanel/ContactList.js"],"names":["React","Component","contact","Button","Input","Select","editContact","ContactList","dispatch","menu","useState","isOpen","setIsOpen","con","contactLst","setContactLst","count","setCount","input","map","index","update","add","ContactUnit","props","allOptions","curr","value","callBk","options","option","select","link"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAqC,eAArC;AACA,OAAO,uBAAP;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEE,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAChC,MAAIC,IAAI,GAAG,CAAC,OAAD,EAAS,OAAT,EAAiB,UAAjB,EAA6B,OAA7B,EAAqC,UAArC,EAAgD,WAAhD,EAA4D,IAA5D,EAAiE,QAAjE,CAAX;;AADgC,kBAEJC,QAAQ,CAAC,IAAD,CAFJ;AAAA;AAAA,MAEzBC,MAFyB;AAAA,MAEjBC,SAFiB;;AAGhC,MAAIC,GAAG,GAAG,IAAIX,OAAJ,EAAV;;AAHgC,mBAIIQ,QAAQ,CAAC,CAACG,GAAD,CAAD,CAJZ;AAAA;AAAA,MAIzBC,UAJyB;AAAA,MAIbC,aAJa;;AAAA,mBAKNL,QAAQ,CAAC,CAAD,CALF;AAAA;AAAA,MAKzBM,KALyB;AAAA,MAKlBC,QALkB;;AAMhC,MAAMC,KAAK,GAAGJ,UAAU,CAACK,GAAX,CAAe,UAACjB,OAAD;AAAA,WAC3B,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEO,IAAnB;AAAyB,MAAA,GAAG,EAAEP,OAAO,CAACkB,KAAR,GAAc,MAA5C;AAAoD,MAAA,KAAK,EAAElB,OAA3D;AAAoE,MAAA,MAAM,EAAEmB,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2B;AAAA,GAAf,CAAd;;AAIA,MAAG,CAACV,MAAJ,EAAY;AACV,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,OAAO,EAAEC,SAAS,CAAC,CAACD,MAAF,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;AAKD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,KADH,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,eAAb;AAA6B,IAAA,OAAO,EAAE,KAAI,CAACI,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,eAAb;AAA6B,IAAA,OAAO,EAAEV,SAAS,CAAC,CAACD,MAAF,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF;AASH,CA1BD;;IA4BMY,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oFACXA,KADW;AAElB;;;;6BACO;AACN,UAAMC,UAAU,GAAG,KAAKD,KAAL,CAAWf,IAA9B;AACA,UAAMiB,IAAI,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBP,KAA9B;AACA,UAAMC,MAAM,GAAG,KAAKG,KAAL,CAAWI,MAA1B;AACA,UAAMC,OAAO,GAAGJ,UAAU,CAACN,GAAX,CAAe,UAASW,MAAT,EAAgBJ,IAAhB,EAAqBL,MAArB,EAA4B;AACzD,YAAIS,MAAM,KAAKJ,IAAf,EAAqB;AACnB,iBAAO,oBAAC,MAAD,CAAQ,MAAR;AAAe,YAAA,KAAK,EAAEI,MAAtB;AAA8B,YAAA,GAAG,EAAEJ,IAAnC;AAAyC,YAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoDI,MAApD,CAAP;AACD,SAFD,MAEO;AACL,iBAAO,oBAAC,MAAD,CAAQ,MAAR;AAAe,YAAA,KAAK,EAAEA,MAAtB;AAA8B,YAAA,GAAG,EAAEJ,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0CI,MAA1C,CAAP;AACD;AACF,OANe,CAAhB,CAJM,CAaN;;AACA,UAAMC,MAAM,GAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,gBAAb;AAA8B,QAAA,GAAG,EAAEL,IAAI,GAAC,QAAxC;AAAkD,QAAA,QAAQ,EAAEL,MAAM,CAACK,IAAD,EAAO,MAAP,EAAe,KAAKC,KAApB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+FE,OAA/F,CAAf;AACA,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWJ,KAAX,GAAiB,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,MADH,YAEQ,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,GAAG,EAAEL,IAAI,GAAC,OAAtD;AAA+D,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBK,IAAvF;AAA6F,QAAA,QAAQ,EAAEX,MAAM,CAACK,IAAD,EAAO,OAAP,EAAgB,KAAKC,KAArB,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADF;AAMD;;;;EAzBuB1B,S;;AA4B1B,eAAeM,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport {contact} from '../util';\nimport { Button, Input, Select} from 'element-react';\nimport 'element-theme-default';\nimport { editContact } from '../../store/actions';\n\n  const ContactList = ({dispatch}) => {\n      let menu = ['other','phone','facebook', 'gmail','linkedin','instagram','qq','wechat'];\n      const [isOpen, setIsOpen] = useState(true);\n      var con = new contact();\n      const [contactLst, setContactLst] = useState([con])\n      const [count, setCount] = useState(0);\n      const input = contactLst.map((contact)=>\n        <ContactUnit menu={menu} key={contact.index+'unit'} value={contact} callBk={update}></ContactUnit>\n    );\n  \n      if(!isOpen) {\n        return(\n          <div className=\"closedContact\">\n            <Button type=\"primary small\" onClick={setIsOpen(!isOpen)}>Expand</Button>\n          </div>\n        )\n      }\n      return (\n        <div>\n          <div className=\"openedContactTitle\">\n            {input}\n            <Button type=\"primary small\" onClick={this.add}>Add</Button>\n            <Button type=\"primary small\" onClick={setIsOpen(!isOpen)}>Collapse</Button>\n          </div>\n        </div>\n      )\n  }\n\n  class ContactUnit extends Component{\n    constructor(props) {\n      super(props);\n    }\n    render(){\n      const allOptions = this.props.menu;\n      const curr = this.props.value.index;\n      const update = this.props.callBk;\n      const options = allOptions.map(function(option,curr,update){\n        if (option === curr) {\n          return <Select.Option value={option} key={curr} selected >{option}</Select.Option>\n        } else {\n          return <Select.Option value={option} key={curr}>{option}</Select.Option>\n        }\n      }\n  \n    );\n      // console.log(curr);\n      const select = <Select name='contactMethods' key={curr+'select'} onChange={update(curr, 'type', this.value)}>{options}</Select>\n      return (\n        <div className=\"contactUnit\" key={this.props.index+'div'}>\n          {select} \n          link: <Input type=\"text\" className=\"contactInput\" key={curr+'input'} value={this.props.value.link} onChange={update(curr, 'value', this.value)}></Input>\n        </div>\n      )\n    }\n  }\n\n  export default ContactList;\n"]},"metadata":{},"sourceType":"module"}